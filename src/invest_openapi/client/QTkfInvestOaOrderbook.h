/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * QTkfInvestOaOrderbook.h
 *
 * 
 */

#ifndef QTkfInvestOaOrderbook_H
#define QTkfInvestOaOrderbook_H

#include <QJsonObject>

#include "QTkfInvestOaOrderResponse.h"
#include "QTkfInvestOaTradeStatus.h"
#include <QList>
#include <QString>

#include "QTkfInvestOaEnum.h"
#include "QTkfInvestOaObject.h"

namespace OpenAPI {

class QTkfInvestOaOrderbook : public QTkfInvestOaObject {
public:
    QTkfInvestOaOrderbook();
    QTkfInvestOaOrderbook(QString json);
    ~QTkfInvestOaOrderbook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFigi() const;
    void setFigi(const QString &figi);
    bool is_figi_Set() const;
    bool is_figi_Valid() const;

    qint32 getDepth() const;
    void setDepth(const qint32 &depth);
    bool is_depth_Set() const;
    bool is_depth_Valid() const;

    QList<QTkfInvestOaOrderResponse> getBids() const;
    void setBids(const QList<QTkfInvestOaOrderResponse> &bids);
    bool is_bids_Set() const;
    bool is_bids_Valid() const;

    QList<QTkfInvestOaOrderResponse> getAsks() const;
    void setAsks(const QList<QTkfInvestOaOrderResponse> &asks);
    bool is_asks_Set() const;
    bool is_asks_Valid() const;

    QTkfInvestOaTradeStatus getTradeStatus() const;
    void setTradeStatus(const QTkfInvestOaTradeStatus &trade_status);
    bool is_trade_status_Set() const;
    bool is_trade_status_Valid() const;

    double getMinPriceIncrement() const;
    void setMinPriceIncrement(const double &min_price_increment);
    bool is_min_price_increment_Set() const;
    bool is_min_price_increment_Valid() const;

    double getFaceValue() const;
    void setFaceValue(const double &face_value);
    bool is_face_value_Set() const;
    bool is_face_value_Valid() const;

    double getLastPrice() const;
    void setLastPrice(const double &last_price);
    bool is_last_price_Set() const;
    bool is_last_price_Valid() const;

    double getClosePrice() const;
    void setClosePrice(const double &close_price);
    bool is_close_price_Set() const;
    bool is_close_price_Valid() const;

    double getLimitUp() const;
    void setLimitUp(const double &limit_up);
    bool is_limit_up_Set() const;
    bool is_limit_up_Valid() const;

    double getLimitDown() const;
    void setLimitDown(const double &limit_down);
    bool is_limit_down_Set() const;
    bool is_limit_down_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString figi;
    bool m_figi_isSet;
    bool m_figi_isValid;

    qint32 depth;
    bool m_depth_isSet;
    bool m_depth_isValid;

    QList<QTkfInvestOaOrderResponse> bids;
    bool m_bids_isSet;
    bool m_bids_isValid;

    QList<QTkfInvestOaOrderResponse> asks;
    bool m_asks_isSet;
    bool m_asks_isValid;

    QTkfInvestOaTradeStatus trade_status;
    bool m_trade_status_isSet;
    bool m_trade_status_isValid;

    double min_price_increment;
    bool m_min_price_increment_isSet;
    bool m_min_price_increment_isValid;

    double face_value;
    bool m_face_value_isSet;
    bool m_face_value_isValid;

    double last_price;
    bool m_last_price_isSet;
    bool m_last_price_isValid;

    double close_price;
    bool m_close_price_isSet;
    bool m_close_price_isValid;

    double limit_up;
    bool m_limit_up_isSet;
    bool m_limit_up_isValid;

    double limit_down;
    bool m_limit_down_isSet;
    bool m_limit_down_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::QTkfInvestOaOrderbook)

#endif // QTkfInvestOaOrderbook_H
