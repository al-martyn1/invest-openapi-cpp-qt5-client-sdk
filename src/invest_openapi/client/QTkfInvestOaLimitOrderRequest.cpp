/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "QTkfInvestOaLimitOrderRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "QTkfInvestOaHelpers.h"

namespace OpenAPI {

QTkfInvestOaLimitOrderRequest::QTkfInvestOaLimitOrderRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

QTkfInvestOaLimitOrderRequest::QTkfInvestOaLimitOrderRequest() {
    this->initializeModel();
}

QTkfInvestOaLimitOrderRequest::~QTkfInvestOaLimitOrderRequest() {}

void QTkfInvestOaLimitOrderRequest::initializeModel() {

    m_lots_isSet = false;
    m_lots_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void QTkfInvestOaLimitOrderRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void QTkfInvestOaLimitOrderRequest::fromJsonObject(QJsonObject json) {

    m_lots_isValid = ::OpenAPI::fromJsonValue(lots, json[QString("lots")]);
    m_lots_isSet = !json[QString("lots")].isNull() && m_lots_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString QTkfInvestOaLimitOrderRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject QTkfInvestOaLimitOrderRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_lots_isSet) {
        obj.insert(QString("lots"), ::OpenAPI::toJsonValue(lots));
    }
    if (operation.isSet()) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(operation));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(price));
    }
    return obj;
}

qint32 QTkfInvestOaLimitOrderRequest::getLots() const {
    return lots;
}
void QTkfInvestOaLimitOrderRequest::setLots(const qint32 &lots) {
    this->lots = lots;
    this->m_lots_isSet = true;
}

bool QTkfInvestOaLimitOrderRequest::is_lots_Set() const{
    return m_lots_isSet;
}

bool QTkfInvestOaLimitOrderRequest::is_lots_Valid() const{
    return m_lots_isValid;
}

QTkfInvestOaOperationType QTkfInvestOaLimitOrderRequest::getOperation() const {
    return operation;
}
void QTkfInvestOaLimitOrderRequest::setOperation(const QTkfInvestOaOperationType &operation) {
    this->operation = operation;
    this->m_operation_isSet = true;
}

bool QTkfInvestOaLimitOrderRequest::is_operation_Set() const{
    return m_operation_isSet;
}

bool QTkfInvestOaLimitOrderRequest::is_operation_Valid() const{
    return m_operation_isValid;
}

double QTkfInvestOaLimitOrderRequest::getPrice() const {
    return price;
}
void QTkfInvestOaLimitOrderRequest::setPrice(const double &price) {
    this->price = price;
    this->m_price_isSet = true;
}

bool QTkfInvestOaLimitOrderRequest::is_price_Set() const{
    return m_price_isSet;
}

bool QTkfInvestOaLimitOrderRequest::is_price_Valid() const{
    return m_price_isValid;
}

bool QTkfInvestOaLimitOrderRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lots_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool QTkfInvestOaLimitOrderRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_lots_isValid && m_operation_isValid && m_price_isValid && true;
}

} // namespace OpenAPI
