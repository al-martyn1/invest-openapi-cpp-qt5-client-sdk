/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "TradeStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace OpenAPI {

TradeStatus::TradeStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

TradeStatus::TradeStatus() {
    this->initializeModel();
}

TradeStatus::~TradeStatus() {}

void TradeStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eTradeStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void TradeStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NormalTrading", Qt::CaseInsensitive) == 0 || jsonString.compare("normal_trading", Qt::CaseInsensitive) == 0) {
        m_value = eTradeStatus::NORMALTRADING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotAvailableForTrading", Qt::CaseInsensitive) == 0 || jsonString.compare("not_available_for_trading", Qt::CaseInsensitive) == 0) {
        m_value = eTradeStatus::NOTAVAILABLEFORTRADING;
        m_value_isSet = m_value_isValid = true;
    }
}

void TradeStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString TradeStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eTradeStatus::NORMALTRADING:
            val = "NormalTrading";
            break;
        case eTradeStatus::NOTAVAILABLEFORTRADING:
            val = "NotAvailableForTrading";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue TradeStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


TradeStatus::eTradeStatus TradeStatus::getValue() const {
    return m_value;
}

void TradeStatus::setValue(const TradeStatus::eTradeStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool TradeStatus::isSet() const {
    
    return m_value_isSet;
}

bool TradeStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
