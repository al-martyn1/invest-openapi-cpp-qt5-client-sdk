/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MarketInstrumentList.h
 *
 * 
 */

#ifndef MarketInstrumentList_H
#define MarketInstrumentList_H

#include <QJsonObject>

#include "MarketInstrument.h"
#include <QList>

#include "Enum.h"
#include "Object.h"

#include "../../marty_decimal.h"


namespace OpenAPI {

class MarketInstrumentList : public Object {
public:
    MarketInstrumentList();
    MarketInstrumentList(QString json);
    ~MarketInstrumentList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    marty::Decimal getTotal() const;
    void setTotal(const marty::Decimal &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QList<MarketInstrument> getInstruments() const;
    void setInstruments(const QList<MarketInstrument> &instruments);
    bool is_instruments_Set() const;
    bool is_instruments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    marty::Decimal total;
    bool m_total_isSet;
    bool m_total_isValid;

    QList<MarketInstrument> instruments;
    bool m_instruments_isSet;
    bool m_instruments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::MarketInstrumentList)

#endif // MarketInstrumentList_H
