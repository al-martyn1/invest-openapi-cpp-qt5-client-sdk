/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OrderStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace OpenAPI {

OrderStatus::OrderStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OrderStatus::OrderStatus() {
    this->initializeModel();
}

OrderStatus::~OrderStatus() {}

void OrderStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOrderStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OrderStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("New", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::NEW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PartiallyFill", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::PARTIALLYFILL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Fill", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::FILL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Cancelled", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Replaced", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::REPLACED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PendingCancel", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::PENDINGCANCEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Rejected", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::REJECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PendingReplace", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::PENDINGREPLACE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PendingNew", Qt::CaseInsensitive) == 0) {
        m_value = eOrderStatus::PENDINGNEW;
        m_value_isSet = m_value_isValid = true;
    }
}

void OrderStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OrderStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOrderStatus::NEW:
            val = "New";
            break;
        case eOrderStatus::PARTIALLYFILL:
            val = "PartiallyFill";
            break;
        case eOrderStatus::FILL:
            val = "Fill";
            break;
        case eOrderStatus::CANCELLED:
            val = "Cancelled";
            break;
        case eOrderStatus::REPLACED:
            val = "Replaced";
            break;
        case eOrderStatus::PENDINGCANCEL:
            val = "PendingCancel";
            break;
        case eOrderStatus::REJECTED:
            val = "Rejected";
            break;
        case eOrderStatus::PENDINGREPLACE:
            val = "PendingReplace";
            break;
        case eOrderStatus::PENDINGNEW:
            val = "PendingNew";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OrderStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OrderStatus::eOrderStatus OrderStatus::getValue() const {
    return m_value;
}

void OrderStatus::setValue(const OrderStatus::eOrderStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OrderStatus::isSet() const {
    
    return m_value_isSet;
}

bool OrderStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
