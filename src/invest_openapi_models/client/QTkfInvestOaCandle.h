/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * QTkfInvestOaCandle.h
 *
 * 
 */

#ifndef QTkfInvestOaCandle_H
#define QTkfInvestOaCandle_H

#include <QJsonObject>

#include "QTkfInvestOaCandleResolution.h"
#include <QDateTime>
#include <QString>

#include "QTkfInvestOaEnum.h"
#include "QTkfInvestOaObject.h"

namespace OpenAPI {

class QTkfInvestOaCandle : public QTkfInvestOaObject {
public:
    QTkfInvestOaCandle();
    QTkfInvestOaCandle(QString json);
    ~QTkfInvestOaCandle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFigi() const;
    void setFigi(const QString &figi);
    bool is_figi_Set() const;
    bool is_figi_Valid() const;

    QTkfInvestOaCandleResolution getInterval() const;
    void setInterval(const QTkfInvestOaCandleResolution &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    double getO() const;
    void setO(const double &o);
    bool is_o_Set() const;
    bool is_o_Valid() const;

    double getC() const;
    void setC(const double &c);
    bool is_c_Set() const;
    bool is_c_Valid() const;

    double getH() const;
    void setH(const double &h);
    bool is_h_Set() const;
    bool is_h_Valid() const;

    double getL() const;
    void setL(const double &l);
    bool is_l_Set() const;
    bool is_l_Valid() const;

    qint32 getV() const;
    void setV(const qint32 &v);
    bool is_v_Set() const;
    bool is_v_Valid() const;

    QDateTime getTime() const;
    void setTime(const QDateTime &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString figi;
    bool m_figi_isSet;
    bool m_figi_isValid;

    QTkfInvestOaCandleResolution interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    double o;
    bool m_o_isSet;
    bool m_o_isValid;

    double c;
    bool m_c_isSet;
    bool m_c_isValid;

    double h;
    bool m_h_isSet;
    bool m_h_isValid;

    double l;
    bool m_l_isSet;
    bool m_l_isValid;

    qint32 v;
    bool m_v_isSet;
    bool m_v_isValid;

    QDateTime time;
    bool m_time_isSet;
    bool m_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::QTkfInvestOaCandle)

#endif // QTkfInvestOaCandle_H
