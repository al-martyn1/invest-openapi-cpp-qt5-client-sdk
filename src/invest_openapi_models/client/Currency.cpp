/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Currency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace OpenAPI {

Currency::Currency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Currency::Currency() {
    this->initializeModel();
}

Currency::~Currency() {}

void Currency::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eCurrency::INVALID_VALUE_OPENAPI_GENERATED;
}

void Currency::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RUB", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::RUB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USD", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::USD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EUR", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::EUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GBP", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::GBP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HKD", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::HKD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHF", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::CHF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JPY", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::JPY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CNY", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::CNY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRY", Qt::CaseInsensitive) == 0) {
        m_value = eCurrency::TRY;
        m_value_isSet = m_value_isValid = true;
    }
}

void Currency::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Currency::asJson() const {
    
    QString val;
    switch (m_value){
        case eCurrency::RUB:
            val = "RUB";
            break;
        case eCurrency::USD:
            val = "USD";
            break;
        case eCurrency::EUR:
            val = "EUR";
            break;
        case eCurrency::GBP:
            val = "GBP";
            break;
        case eCurrency::HKD:
            val = "HKD";
            break;
        case eCurrency::CHF:
            val = "CHF";
            break;
        case eCurrency::JPY:
            val = "JPY";
            break;
        case eCurrency::CNY:
            val = "CNY";
            break;
        case eCurrency::TRY:
            val = "TRY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Currency::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Currency::eCurrency Currency::getValue() const {
    return m_value;
}

void Currency::setValue(const Currency::eCurrency& value){
    m_value = value;
    m_value_isSet = true;
}
bool Currency::isSet() const {
    
    return m_value_isSet;
}

bool Currency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
