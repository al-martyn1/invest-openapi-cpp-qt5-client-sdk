/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "BrokerAccountType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace OpenAPI {

BrokerAccountType::BrokerAccountType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

BrokerAccountType::BrokerAccountType() {
    this->initializeModel();
}

BrokerAccountType::~BrokerAccountType() {}

void BrokerAccountType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eBrokerAccountType::INVALID_VALUE_OPENAPI_GENERATED;
}

void BrokerAccountType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Tinkoff", Qt::CaseInsensitive) == 0) {
        m_value = eBrokerAccountType::TINKOFF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TinkoffIis", Qt::CaseInsensitive) == 0) {
        m_value = eBrokerAccountType::TINKOFFIIS;
        m_value_isSet = m_value_isValid = true;
    }
}

void BrokerAccountType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString BrokerAccountType::asJson() const {
    
    QString val;
    switch (m_value){
        case eBrokerAccountType::TINKOFF:
            val = "Tinkoff";
            break;
        case eBrokerAccountType::TINKOFFIIS:
            val = "TinkoffIis";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue BrokerAccountType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


BrokerAccountType::eBrokerAccountType BrokerAccountType::getValue() const {
    return m_value;
}

void BrokerAccountType::setValue(const BrokerAccountType::eBrokerAccountType& value){
    m_value = value;
    m_value_isSet = true;
}
bool BrokerAccountType::isSet() const {
    
    return m_value_isSet;
}

bool BrokerAccountType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
