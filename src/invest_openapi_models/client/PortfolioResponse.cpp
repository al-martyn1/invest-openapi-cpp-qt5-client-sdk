/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "PortfolioResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace OpenAPI {

PortfolioResponse::PortfolioResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

PortfolioResponse::PortfolioResponse() {
    this->initializeModel();
}

PortfolioResponse::~PortfolioResponse() {}

void PortfolioResponse::initializeModel() {

    m_tracking_id_isSet = false;
    m_tracking_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;
}

void PortfolioResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void PortfolioResponse::fromJsonObject(QJsonObject json) {

    m_tracking_id_isValid = ::OpenAPI::fromJsonValue(tracking_id, json[QString("trackingId")]);
    m_tracking_id_isSet = !json[QString("trackingId")].isNull() && m_tracking_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;
}

QString PortfolioResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject PortfolioResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_tracking_id_isSet) {
        obj.insert(QString("trackingId"), ::OpenAPI::toJsonValue(tracking_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(status));
    }
    if (payload.isSet()) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(payload));
    }
    return obj;
}

QString PortfolioResponse::getTrackingId() const {
    return tracking_id;
}
void PortfolioResponse::setTrackingId(const QString &tracking_id) {
    this->tracking_id = tracking_id;
    this->m_tracking_id_isSet = true;
}

bool PortfolioResponse::is_tracking_id_Set() const{
    return m_tracking_id_isSet;
}

bool PortfolioResponse::is_tracking_id_Valid() const{
    return m_tracking_id_isValid;
}

QString PortfolioResponse::getStatus() const {
    return status;
}
void PortfolioResponse::setStatus(const QString &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool PortfolioResponse::is_status_Set() const{
    return m_status_isSet;
}

bool PortfolioResponse::is_status_Valid() const{
    return m_status_isValid;
}

Portfolio PortfolioResponse::getPayload() const {
    return payload;
}
void PortfolioResponse::setPayload(const Portfolio &payload) {
    this->payload = payload;
    this->m_payload_isSet = true;
}

bool PortfolioResponse::is_payload_Set() const{
    return m_payload_isSet;
}

bool PortfolioResponse::is_payload_Valid() const{
    return m_payload_isValid;
}

bool PortfolioResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tracking_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (payload.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool PortfolioResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tracking_id_isValid && m_status_isValid && m_payload_isValid && true;
}

} // namespace OpenAPI
