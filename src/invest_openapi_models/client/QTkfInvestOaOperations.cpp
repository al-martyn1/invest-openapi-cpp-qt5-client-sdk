/**
 * OpenAPI
 * tinkoff.ru/invest OpenAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n.v.melnikov@tinkoff.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "QTkfInvestOaOperations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "QTkfInvestOaHelpers.h"

namespace OpenAPI {

QTkfInvestOaOperations::QTkfInvestOaOperations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

QTkfInvestOaOperations::QTkfInvestOaOperations() {
    this->initializeModel();
}

QTkfInvestOaOperations::~QTkfInvestOaOperations() {}

void QTkfInvestOaOperations::initializeModel() {

    m_operations_isSet = false;
    m_operations_isValid = false;
}

void QTkfInvestOaOperations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void QTkfInvestOaOperations::fromJsonObject(QJsonObject json) {

    m_operations_isValid = ::OpenAPI::fromJsonValue(operations, json[QString("operations")]);
    m_operations_isSet = !json[QString("operations")].isNull() && m_operations_isValid;
}

QString QTkfInvestOaOperations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject QTkfInvestOaOperations::asJsonObject() const {
    QJsonObject obj;
    if (operations.size() > 0) {
        obj.insert(QString("operations"), ::OpenAPI::toJsonValue(operations));
    }
    return obj;
}

QList<QTkfInvestOaOperation> QTkfInvestOaOperations::getOperations() const {
    return operations;
}
void QTkfInvestOaOperations::setOperations(const QList<QTkfInvestOaOperation> &operations) {
    this->operations = operations;
    this->m_operations_isSet = true;
}

bool QTkfInvestOaOperations::is_operations_Set() const{
    return m_operations_isSet;
}

bool QTkfInvestOaOperations::is_operations_Valid() const{
    return m_operations_isValid;
}

bool QTkfInvestOaOperations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (operations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool QTkfInvestOaOperations::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_operations_isValid && true;
}

} // namespace OpenAPI
